networks:
  default:
    external:
      name: OMS
secrets:
  db_password:
    file: /Users/sergeypeshkov/oms-docker/secrets/core-db_password
  jwt_key:
    file: /Users/sergeypeshkov/oms-docker/secrets/jwt_key
  mail_password:
    file: /Users/sergeypeshkov/oms-docker/secrets/mail_password
  mail_user:
    file: /Users/sergeypeshkov/oms-docker/secrets/mail_user
  sendgrid_key:
    file: /Users/sergeypeshkov/oms-docker/secrets/sendgrid_key
services:
  oms-core-elixir:
    build:
      args:
        MIX_ENV: development
      context: /Users/sergeypeshkov/oms-docker/oms-core-elixir
      dockerfile: ./docker/oms-core-elixir/Dockerfile
    depends_on:
    - postgres-oms-core-elixir
    environment:
      BUGSNAG_KEY: '123'
      DB_HOST: postgres-oms-core-elixir
      JWT_ISSUER: OMS
      JWT_SECRET_KEY_FILE: /run/secrets/jwt_key
      MAIL_PASSWORD: /run/secrets/mail_password
      MAIL_USER: /run/secrets/mail_user
      MIX_ENV: development
      PG_PASSWORD: 5ecr3t
      SENDGRID_KEY_FILE: /run/secrets/sendgrid_key
    expose:
    - '4000'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:4000/healthcheck
      timeout: 10s
    image: aegee/oms-core-elixir:dev
    labels:
      traefik.backend: oms-core-elixir
      traefik.enable: "true"
      traefik.frontend.priority: '101'
      traefik.frontend.rule: PathPrefix:/services/oms-core-elixir/api;PathPrefixStrip:/services/oms-core-elixir/api
      traefik.port: '4000'
    restart: on-failure
    secrets:
    - source: db_password
    - source: jwt_key
    - source: mail_password
    - source: mail_user
    - source: sendgrid_key
    volumes:
    - /Users/sergeypeshkov/oms-docker/oms-core-elixir:/usr/src/myapp:rw
    - /usr/src/myapp/deps
  oms-core-js:
    build:
      context: /Users/sergeypeshkov/oms-docker/oms-core-js
      dockerfile: ./docker/oms-core-js/Dockerfile
    depends_on:
    - postgres-oms-core-js
    environment:
      BUGSNAG_KEY: ''
      CORE_LOGIN: admin@aegee.org
      CORE_PASSWORD: admin1234
      HOST: localhost
      NODE_ENV: development
      PG_PASSWORD: 5ecr3t
    expose:
    - '8084'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8084/healthcheck
      timeout: 10s
    image: aegee/oms-core-js:dev
    labels:
      traefik.backend: oms-core-js
      traefik.enable: "true"
      traefik.frontend.priority: '110'
      traefik.frontend.rule: PathPrefix:/api/core;PathPrefixStrip:/api/core
      traefik.port: '8084'
    restart: always
    volumes:
    - oms-core-js-media:/usr/app/media:rw
    - shared:/usr/app/shared:ro
    - /Users/sergeypeshkov/oms-docker/oms-core-js:/usr/app/src:rw
    - /usr/app/src/node_modules
  oms-discounts:
    build:
      context: /Users/sergeypeshkov/oms-docker/oms-discounts
      dockerfile: ./docker/oms-discounts/Dockerfile
    command: sh -c '/usr/app/scripts/bootstrap.sh && npm run nodemon-start'
    depends_on:
    - postgres-oms-discounts
    environment:
      BUGSNAG_KEY: '123'
      HOST: localhost
      NODE_ENV: development
      PG_PASSWORD: 5ecr3t
    expose:
    - '8084'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8084/healthcheck
      timeout: 10s
    image: aegee/oms-discounts:dev
    labels:
      traefik.backend: oms-discounts
      traefik.enable: "true"
      traefik.frontend.priority: '110'
      traefik.frontend.rule: PathPrefix:/services/oms-discounts/api;PathPrefixStrip:/services/oms-discounts/api
      traefik.port: '8084'
    volumes:
    - oms-discounts-media:/usr/app/media:rw
    - shared:/usr/app/shared:ro
    - /Users/sergeypeshkov/oms-docker/oms-discounts:/usr/app/src:rw
    - /usr/app/src/node_modules
  oms-events:
    build:
      context: /Users/sergeypeshkov/oms-docker/oms-events
      dockerfile: ./docker/oms-events/Dockerfile
    depends_on:
    - postgres-oms-events
    environment:
      BUGSNAG_KEY: '123'
      CORE_LOGIN: admin@aegee.org
      CORE_PASSWORD: admin1234
      HOST: localhost
      NODE_ENV: development
      PG_PASSWORD: 5ecr3t
    expose:
    - '8084'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8084/healthcheck
      timeout: 10s
    image: aegee/oms-events:dev
    labels:
      traefik.backend: oms-events
      traefik.enable: "true"
      traefik.frontend.priority: '110'
      traefik.frontend.rule: PathPrefix:/services/oms-events/api;PathPrefixStrip:/services/oms-events/api
      traefik.port: '8084'
    restart: on-failure
    volumes:
    - oms-events-media:/usr/app/media:rw
    - shared:/usr/app/shared:ro
    - /Users/sergeypeshkov/oms-docker/oms-events:/usr/app/src:rw
    - /usr/app/src/node_modules
  oms-events-static:
    expose:
    - '80'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:80/healthcheck
      timeout: 10s
    image: aegee/nginx-static:latest
    labels:
      traefik.backend: oms-events-static
      traefik.enable: "true"
      traefik.frontend.priority: '110'
      traefik.frontend.rule: PathPrefix:/media/events;PathPrefixStrip:/media/events
      traefik.port: '80'
    restart: on-failure
    volumes:
    - /Users/sergeypeshkov/oms-docker/oms-events/docker/oms-events-static/nginx.conf:/etc/nginx/nginx.conf:ro
    - /Users/sergeypeshkov/oms-docker/oms-events/docker/oms-events-static/sites/default:/etc/nginx/sites-available/default:ro
    - oms-events-media:/usr/app/media:ro
    - shared:/usr/app/shared:ro
    - /Users/sergeypeshkov/oms-docker/oms-events/docker/oms-events-static/status.json:/usr/app/status.json:ro
  oms-frontend:
    build:
      context: /Users/sergeypeshkov/oms-docker/oms-frontend
      dockerfile: ./docker/Dockerfile
    image: aegee/oms-frontend:dev
    labels:
      traefik.backend: oms-frontend
      traefik.enable: "true"
      traefik.frontend.priority: '11'
      traefik.frontend.rule: Host:localhost;PathPrefix:/
      traefik.port: '80'
    restart: always
    volumes:
    - /Users/sergeypeshkov/oms-docker/oms-frontend:/usr/app/src:rw
    - /usr/app/src/node_modules
  oms-mail-transfer-agent:
    build:
      context: /Users/sergeypeshkov/oms-docker/oms-mailer
      dockerfile: docker/mail_transfer_agent/Dockerfile
    environment:
      SMTP_HOST: smtp.gmail.com
      SMTP_PASSWORD: 5ecr3t
      SMTP_PORT: 587
      SMTP_USER: admin@DOMAIN
    expose:
    - '25'
    image: aegee/oms-mail-transfer-agent:dev
    restart: always
  oms-mailer:
    build:
      args:
        MIX_ENV: development
      context: /Users/sergeypeshkov/oms-docker/oms-mailer
      dockerfile: ./docker/oms-mailer/Dockerfile
    depends_on:
    - oms-mail-transfer-agent
    environment:
      MIX_ENV: development
      SMTP_USER: admin@DOMAIN
    expose:
    - '4000'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:4000/healthcheck
      timeout: 10s
    image: aegee/oms-mailer:dev
    labels:
      traefik.backend: oms-mailer
      traefik.enable: "true"
      traefik.frontend.priority: '110'
      traefik.frontend.rule: Path:/services/oms-mailer/api/healthcheck;PathPrefixStrip:/services/oms-mailer/api
      traefik.port: '4000'
    restart: unless-stopped
    volumes:
    - /usr/src/myapp/deps
  oms-statutory:
    build:
      context: /Users/sergeypeshkov/oms-docker/oms-statutory
      dockerfile: ./docker/oms-statutory/Dockerfile
    command: sh -c "sh /usr/app/scripts/bootstrap.sh && nodemon -e 'js,json' lib/run.js
      | bunyan"
    depends_on:
    - postgres-oms-statutory
    environment:
      BUGSNAG_KEY: '123'
      CORE_LOGIN: admin@aegee.org
      CORE_PASSWORD: admin1234
      HOST: localhost
      NODE_ENV: development
      PG_PASSWORD: 5ecr3t
    expose:
    - '8084'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8084/healthcheck
      timeout: 10s
    image: aegee/oms-statutory:dev
    labels:
      traefik.backend: oms-statutory
      traefik.enable: "true"
      traefik.frontend.priority: '110'
      traefik.frontend.rule: PathPrefix:/services/oms-statutory/api;PathPrefixStrip:/services/oms-statutory/api
      traefik.port: '8084'
    restart: always
    volumes:
    - oms-statutory-media:/usr/app/media:rw
    - shared:/usr/app/shared:ro
    - /Users/sergeypeshkov/oms-docker/oms-statutory:/usr/app/src:rw
    - /usr/app/src/node_modules
  oms-statutory-static:
    expose:
    - '80'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:80/healthcheck
      timeout: 10s
    image: aegee/nginx-static:latest
    labels:
      traefik.backend: oms-statutory-static
      traefik.enable: "true"
      traefik.frontend.priority: '110'
      traefik.frontend.rule: PathPrefix:/media/statutory;PathPrefixStrip:/media/statutory
      traefik.port: '80'
    restart: on-failure
    volumes:
    - /Users/sergeypeshkov/oms-docker/oms-statutory/docker/oms-statutory-static/nginx.conf:/etc/nginx/nginx.conf:ro
    - /Users/sergeypeshkov/oms-docker/oms-statutory/docker/oms-statutory-static/sites/default:/etc/nginx/sites-available/default:ro
    - oms-statutory-media:/usr/app/media:ro
    - shared:/usr/app/shared:ro
    - /Users/sergeypeshkov/oms-docker/oms-statutory/docker/oms-statutory-static/status.json:/usr/app/status.json:ro
  portal:
    build:
      context: /Users/sergeypeshkov/oms-docker/oms-global/docker/portal
      dockerfile: ./Dockerfile.dev
    expose:
    - '80'
    image: aegee/portal:dev
    labels:
      traefik.backend: portal
      traefik.enable: "true"
      traefik.frontend.priority: '20'
      traefik.frontend.rule: Host:portal.localhost
      traefik.port: '80'
    restart: always
  postgres-oms-core-elixir:
    environment:
      POSTGRES_PASSWORD: 5ecr3t
      POSTGRES_USER: postgres
    expose:
    - '5432'
    image: postgres:10.6
    restart: always
    volumes:
    - postgres-oms-core-elixir:/var/lib/postgresql/data:rw
  postgres-oms-core-js:
    environment:
      POSTGRES_PASSWORD: 5ecr3t
      POSTGRES_USER: postgres
    expose:
    - '5432'
    image: postgres:10
    restart: always
    volumes:
    - postgres-oms-core-js:/var/lib/postgresql/data:rw
  postgres-oms-discounts:
    environment:
      POSTGRES_PASSWORD: 5ecr3t
      POSTGRES_USER: postgres
    expose:
    - '5432'
    image: postgres:10
    volumes:
    - postgres-oms-discounts:/var/lib/postgresql/data:rw
  postgres-oms-events:
    environment:
      POSTGRES_PASSWORD: 5ecr3t
      POSTGRES_USER: postgres
    expose:
    - '5432'
    image: postgres:10
    restart: always
    volumes:
    - postgres-oms-events:/var/lib/postgresql/data:rw
  postgres-oms-statutory:
    environment:
      POSTGRES_PASSWORD: 5ecr3t
      POSTGRES_USER: postgres
    expose:
    - '5432'
    image: postgres:10
    restart: always
    volumes:
    - postgres-oms-statutory:/var/lib/postgresql/data:rw
  traefik:
    command: --web.metrics.prometheus
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - traefik
      - healthcheck
      timeout: 10s
    image: traefik:v1.7.4-alpine
    labels:
      traefik.backend: traefik
      traefik.enable: "true"
      traefik.frontend.auth.basic.users: admin:$$2y$$05$$tvs7OQD0MjodTrzCw/HuNuVNBDMjQJbn7yuC1v9dgBIYdE87xL5Si
      traefik.frontend.priority: '20'
      traefik.frontend.rule: Host:traefik.localhost
      traefik.port: '8080'
    ports:
    - published: 80
      target: 80
    - published: 443
      target: 443
    restart: always
    volumes:
    - /Users/sergeypeshkov/oms-docker/secrets/acme.json:/etc/acme.json:rw
    - /Users/sergeypeshkov/oms-docker/oms-global/docker/traefik/traefik.toml.dev:/etc/traefik/traefik.toml:rw
    - /Users/sergeypeshkov/oms-docker/oms-global/docker/traefik/logs:/var/log/traefik:rw
    - /var/run/docker.sock:/var/run/docker.sock:ro
version: '3.4'
volumes:
  oms-core-js-media:
    driver: local
  oms-discounts-media:
    driver: local
  oms-events-media:
    driver: local
  oms-statutory-media:
    driver: local
  postgres-oms-core-elixir:
    driver: local
  postgres-oms-core-js:
    driver: local
  postgres-oms-discounts:
    driver: local
  postgres-oms-events:
    driver: local
  postgres-oms-statutory:
    driver: local
  shared:
    driver: local

